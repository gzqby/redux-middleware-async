[{"/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/index.tsx":"1","/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/reportWebVitals.ts":"2","/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/App.tsx":"3"},{"size":1486,"mtime":1610960541374,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1610692489639,"results":"6","hashOfConfig":"5"},{"size":1439,"mtime":1610960794623,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"pkzkvl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/index.tsx",[],["16","17"],"/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/reportWebVitals.ts",[],"/Users/zgo/code/projects/redux-middleware-async/example/my-app/src/App.tsx",["18","19","20"],"import React, { useCallback } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport { TypeProps } from \"@zgo/redux-middleware-async\";\n\ntype TypeLoading = {\n  [name: string]: boolean\n}\n\nfunction App({dispatch, number, loading}:TypeProps<{number: number, loading: TypeLoading}>) {\n  const addOrLess = useCallback((bool: boolean)=>{\n    if (bool) {\n      dispatch({\n        type: 'add',\n        async: ()=>new Promise((resolve, reject) => {\n          setTimeout(()=>{resolve(100)}, 1000);\n          // setTimeout(()=>{reject(100)}, 1000);\n        }),\n        succuss: (res)=>{\n          return {type: 'less'};\n        },\n        error: (err)=>{\n          console.log(err);\n          return err;\n        },\n        start: (dispatch, actionName, cb) =>{\n          cb();\n          console.log(actionName);\n        },\n        always: (dispatch, actionName, cb)=>{\n          cb();\n          console.log(actionName);\n        }\n      });\n    }else{\n      dispatch({type: 'less'});\n    }\n  },[]);\n  console.log(loading.add); \n  // ->boolean\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          {number}\n        </p>\n        <a onClick={()=>addOrLess(true)}>\n          add\n        </a>\n        <a onClick={()=>addOrLess(false)}>\n          less\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default connect(({number, loading}:any)=>{\n  return {number, loading}\n})(App);\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":38,"column":5,"nodeType":"27","endLine":38,"endColumn":7,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":48,"column":9,"nodeType":"31","endLine":48,"endColumn":42},{"ruleId":"29","severity":1,"message":"30","line":51,"column":9,"nodeType":"31","endLine":51,"endColumn":43},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["34"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [dispatch]",{"range":"37","text":"38"},[1007,1009],"[dispatch]"]